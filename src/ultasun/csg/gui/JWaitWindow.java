package ultasun.csg.gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JFrame;
import javax.swing.Timer;

/**
 * A Window with a counting-up-per-second display to indicate to the user that
 * the foreground is waiting for a background process to complete.
 *
 * @author ultasun
 */
public class JWaitWindow extends javax.swing.JFrame {

    private final Timer t;
    private final String verb;
    private int counter;

    /**
     * Construct the wait window.
     *
     * @param verb The verb to display to the user (such as "Downloading").
     */
    public JWaitWindow(String verb) {
        super();
        initComponents();
        this.verb = verb + "... ";
        this.counter = 0;
        this.jLabel1.setText(this.verb + counter);
        this.t = new Timer(1000, new JWaitWindowActionListener(this));
        this.setTitle(verb);
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.setAlwaysOnTop(true);
    }

    /**
     * Stop the timer when the window is hidden, start the timer when the window
     * is visible.
     *
     * @param visible Boolean is the JFrame visible.
     */
    @Override
    public void setVisible(boolean visible) {
        if (visible) {
            this.t.start();
        } else {
            this.t.stop();
        }
        super.setVisible(visible);
    }

    /**
     * Stop the timer and dispose of the JFrame.
     */
    @Override
    public void dispose() {
        this.t.stop();
        super.dispose();
    }

    private void incrementLabel() {
        counter++;
        jLabel1.setText(verb + counter);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("not yet set");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

    private class JWaitWindowActionListener implements ActionListener {

        private final JWaitWindow jww;

        public JWaitWindowActionListener(JWaitWindow jww) {
            this.jww = jww;
        }

        @Override
        public void actionPerformed(ActionEvent ae) {
            jww.incrementLabel();
        }

    }
}
